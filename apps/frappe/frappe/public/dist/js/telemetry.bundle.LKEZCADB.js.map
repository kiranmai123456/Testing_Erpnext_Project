{
  "version": 3,
  "sources": ["../../../../../apps/frappe/frappe/public/js/lib/posthog.js", "../../../../../apps/frappe/frappe/public/js/telemetry/index.js"],
  "sourcesContent": ["!function(t,e){var o,n,p,r;e.__SV||(window.posthog=e,e._i=[],e.init=function(i,s,a){function g(t,e){var o=e.split(\".\");2==o.length&&(t=t[o[0]],e=o[1]),t[e]=function(){t.push([e].concat(Array.prototype.slice.call(arguments,0)))}}(p=t.createElement(\"script\")).type=\"text/javascript\",p.async=!0,p.src=s.api_host+\"/static/array.js\",(r=t.getElementsByTagName(\"script\")[0]).parentNode.insertBefore(p,r);var u=e;for(void 0!==a?u=e[a]=[]:a=\"posthog\",u.people=u.people||[],u.toString=function(t){var e=\"posthog\";return\"posthog\"!==a&&(e+=\".\"+a),t||(e+=\" (stub)\"),e},u.people.toString=function(){return u.toString(1)+\".people (stub)\"},o=\"capture identify alias people.set people.set_once set_config register register_once unregister opt_out_capturing has_opted_out_capturing opt_in_capturing reset isFeatureEnabled onFeatureFlags\".split(\" \"),n=0;n<o.length;n++)g(u,o[n]);e._i.push([i,s,a])},e.__SV=1)}(document,window.posthog||[]);\n", "import \"../lib/posthog.js\";\n\nclass TelemetryManager {\n\tconstructor() {\n\t\tthis.enabled = false;\n\n\t\tthis.project_id = frappe.boot.posthog_project_id;\n\t\tthis.telemetry_host = frappe.boot.posthog_host;\n\t\tthis.site_age = frappe.boot.telemetry_site_age;\n\t\tif (cint(frappe.boot.enable_telemetry) && this.project_id && this.telemetry_host) {\n\t\t\tthis.enabled = true;\n\t\t}\n\t}\n\n\tinitialize() {\n\t\tif (!this.enabled) return;\n\t\tlet disable_decide = !this.should_record_session();\n\t\ttry {\n\t\t\tposthog.init(this.project_id, {\n\t\t\t\tapi_host: this.telemetry_host,\n\t\t\t\tautocapture: false,\n\t\t\t\tcapture_pageview: false,\n\t\t\t\tcapture_pageleave: false,\n\t\t\t\tadvanced_disable_decide: disable_decide,\n\t\t\t});\n\t\t\tposthog.identify(frappe.boot.sitename);\n\t\t\tthis.send_heartbeat();\n\t\t\tthis.register_pageview_handler();\n\t\t} catch (e) {\n\t\t\tconsole.trace(\"Failed to initialize telemetry\", e);\n\t\t\tthis.enabled = false;\n\t\t}\n\t}\n\n\tcapture(event, app, props) {\n\t\tif (!this.enabled) return;\n\t\tposthog.capture(`${app}_${event}`, props);\n\t}\n\n\tdisable() {\n\t\tthis.enabled = false;\n\t}\n\n\tcan_enable() {\n\t\tif (cint(navigator.doNotTrack)) {\n\t\t\treturn false;\n\t\t}\n\t\tlet posthog_available = Boolean(this.telemetry_host && this.project_id);\n\t\tlet sentry_available = Boolean(frappe.boot.sentry_dsn);\n\t\treturn posthog_available || sentry_available;\n\t}\n\n\tsend_heartbeat() {\n\t\tconst KEY = \"ph_last_heartbeat\";\n\t\tconst now = frappe.datetime.system_datetime(true);\n\t\tconst last = localStorage.getItem(KEY);\n\n\t\tif (!last || moment(now).diff(moment(last), \"hours\") > 12) {\n\t\t\tlocalStorage.setItem(KEY, now.toISOString());\n\t\t\tthis.capture(\"heartbeat\", \"frappe\", { frappe_version: frappe.boot?.versions?.frappe });\n\t\t}\n\t}\n\n\tregister_pageview_handler() {\n\t\tif (this.site_age && this.site_age > 6) {\n\t\t\treturn;\n\t\t}\n\n\t\tfrappe.router.on(\"change\", () => {\n\t\t\tposthog.capture(\"$pageview\");\n\t\t});\n\t}\n\n\tshould_record_session() {\n\t\tlet start = frappe.boot.sysdefaults.session_recording_start;\n\t\tif (!start) return;\n\n\t\tlet start_datetime = frappe.datetime.str_to_obj(start);\n\t\tlet now = frappe.datetime.now_datetime();\n\t\t// if user allowed recording only record for first 2 hours, never again.\n\t\treturn frappe.datetime.get_minute_diff(now, start_datetime) < 120;\n\t}\n}\n\nfrappe.telemetry = new TelemetryManager();\nfrappe.telemetry.initialize();\n"],
  "mappings": "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",
  "names": ["t", "o", "n", "p", "r", "i", "s", "a", "g", "e", "u", "TelemetryManager", "disable_decide", "e", "event", "app", "props", "posthog_available", "sentry_available", "_a", "_b", "KEY", "now", "last", "start", "start_datetime"]
}
